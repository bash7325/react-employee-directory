{"version":3,"sources":["utils/API.js","components/Footer.js","components/EmployeeCard.js","components/Navigation.js","components/MainContent.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Footer","className","href","EmployeeCard","props","alt","firstName","src","picture","lastName","email","phone","city","SearchForm","id","style","display","marginLeft","marginTop","htmlFor","onChange","handleInputChange","value","name","type","placeholder","onClick","handleFormSubmit","refreshPage","MainContent","state","search","employees","error","searchEmployee","filter","console","log","filteredList","employee","Object","values","join","toLowerCase","indexOf","setState","e","target","preventDefault","API","then","res","data","results","map","i","first","last","large","location","key","catch","err","Navigation","this","item","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.632c1d5a.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\n\r\n// Random User API\r\n\r\nexport default {\r\n  search: function() {\r\n    return axios.get(\"https://randomuser.me/api/?results=20&nat=us'\");\r\n  }\r\n};","import React from 'react'\r\nimport '../index.css'\r\n\r\nfunction Footer(){\r\n    return (\r\n        <footer>\r\n            <ul className=\"footer\">\r\n                <ul>Users generated by <a href=\"https://randomuser.me/\">Random User Generator</a></ul>\r\n            </ul>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction EmployeeCard(props) {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          <img alt={props.firstName} src={props.picture} />\r\n        </th>\r\n        <td>{props.firstName}</td>\r\n        <td>{props.lastName}</td>\r\n        <td>{props.email}</td>\r\n        <td>{props.phone}</td>\r\n        <td>{props.city}</td>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default EmployeeCard;","import React from 'react';\r\nimport '../index.css';\r\n\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form id=\"searchBar\">\r\n      <div className=\"input-group\" style={{ display: 'flex', marginLeft: '2rem', marginTop: '5px' }}>\r\n        <label htmlFor=\"search\"></label>\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.value}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter Search Here\"\r\n          id=\"search\"\r\n        />\r\n        <button onClick={props.handleFormSubmit} className=\"btn btn-danger ml-1\">\r\n          Search\r\n        </button>\r\n        <button onClick={props.refreshPage} className=\"btn btn-primary ml-1 mr-1\">\r\n          Reset\r\n        </button>\r\n        {/* <br /> */}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Footer from './Footer';\r\nimport EmployeeCard from './EmployeeCard';\r\nimport Navigation from './Navigation.js';\r\n\r\nclass MainContent extends Component {\r\n    state = {\r\n      // stores the specific information we are needing for the database into their respective categories\r\n        search: \"\",\r\n        employees: [],\r\n        error: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n      // Calls the random user database API and pulls the requested information from the data for the page\r\n        API.search()\r\n            .then(res => {\r\n                console.log(res)\r\n                this.setState({\r\n                    employees: res.data.results.map((e, i) => ({\r\n                        firstName: e.name.first,\r\n                        lastName: e.name.last,\r\n                        picture: e.picture.large,\r\n                        email: e.email,\r\n                        phone: e.phone,\r\n                        city: e.location.city,\r\n                        key: i,\r\n                    })),\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    searchEmployee = (filter) => {\r\n        console.log('Search', filter);\r\n        const filteredList = this.state.employees.filter((employee) => {\r\n          // merge data together, then check to see if employee exists\r\n          let values = Object.values(employee).join('').toLowerCase();\r\n          return values.indexOf(filter.toLowerCase()) !== -1;\r\n        });\r\n        // Update the employee list with the filtered value\r\n        this.setState({ employees: filteredList });\r\n      };\r\n    \r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n          [e.target.name]: e.target.value,\r\n        });\r\n        console.log('Handle ', this.state.search);\r\n      };\r\n    //search function that will be called back later upon the onclick of the submit button\r\n      handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Button Clicked', this.state.search, e);\r\n        this.searchEmployee(this.state.search);\r\n      };\r\n  render() {\r\n    return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n              <h2>Employee Directory</h2>\r\n              <Navigation\r\n                value={this.state.search}\r\n                handleInputChange={this.handleInputChange}\r\n                handleFormSubmit={this.handleFormSubmit}\r\n              />\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Photo</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>City</th>\r\n                  </tr>\r\n                </thead>\r\n                {[...this.state.employees].map((item) => (\r\n                  <EmployeeCard\r\n                  //All the information that we need stored into variables that will be based into the employee card where they will be called later to organize the data accordingly\r\n                    picture={item.picture}\r\n                    firstName={item.firstName}\r\n                    lastName={item.lastName}\r\n                    email={item.email}\r\n                    phone={item.phone}\r\n                    city={item.city}\r\n                    key={item.key}\r\n                  />\r\n                ))}\r\n              </table>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainContent","\r\nimport React from 'react';\r\nimport './App.css';\r\nimport './index.css';\r\nimport MainContent from './components/MainContent'\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <MainContent />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","  \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}